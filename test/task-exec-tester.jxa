(ns task-exec-tester
    (require io
	     filelib)
    (use (fmon :only (monitor-file/3))
	 (task-exec :only (execute/4 wait-for-completion/1))
	 (erlang :only (spawn/1))))


(defn+ test-logger ()
  (receive
   ({:line line} (io/format "line: ~s" [line]) (test-logger))
   (:eof (io/format "eof reached~n"))))


(defn+ test ()
  (case (execute "sleep-task" "./lsw.sh" "/home/martin/Temp" 4000)
	({:success {exit-code stdout-f stderr-f ec-file}} (io/format "obtained exit code ~p stdout is ~p~n" [exit-code stdout-f])
	 (case (monitor-file stdout-f (fn () :true) [(spawn (fn () (test-logger)))])
	       ({:pid m-pid} (io/format "monitor pid is ~p~n" [m-pid]))
	       ({:failure reason} (io/format "failed to monitor file with reason ~p~n" [reason])))
	 (io/format "finished with exit code ~p~n" [exit-code]))
	({:pid pid stdout-file stderr-file ec-file}
	 (io/format "process is running with pid ~p~n" [pid])
	 (case (monitor-file stdout-file (fn () (filelib/is_file ec-file)) [(spawn (fn () (test-logger)))])
	       ({:pid m-pid} (io/format "monitor pid is ~p~n" [m-pid]))
	       ({:failure reason} (io/format "failed to monitor file with reason ~p~n" [reason])))
	 (io/format "process completed with result ~p~n" [(wait-for-completion pid)]))))
